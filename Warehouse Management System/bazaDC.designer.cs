#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warehouse_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class bazaDCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDaneFirmy(DaneFirmy instance);
    partial void UpdateDaneFirmy(DaneFirmy instance);
    partial void DeleteDaneFirmy(DaneFirmy instance);
    partial void InsertUzytkownicy(Uzytkownicy instance);
    partial void UpdateUzytkownicy(Uzytkownicy instance);
    partial void DeleteUzytkownicy(Uzytkownicy instance);
    partial void InsertFaktury(Faktury instance);
    partial void UpdateFaktury(Faktury instance);
    partial void DeleteFaktury(Faktury instance);
    partial void InsertKlienci(Klienci instance);
    partial void UpdateKlienci(Klienci instance);
    partial void DeleteKlienci(Klienci instance);
    partial void InsertProdukty(Produkty instance);
    partial void UpdateProdukty(Produkty instance);
    partial void DeleteProdukty(Produkty instance);
    partial void InsertProdukty_sprzedane(Produkty_sprzedane instance);
    partial void UpdateProdukty_sprzedane(Produkty_sprzedane instance);
    partial void DeleteProdukty_sprzedane(Produkty_sprzedane instance);
    partial void InsertUprawnienia(Uprawnienia instance);
    partial void UpdateUprawnienia(Uprawnienia instance);
    partial void DeleteUprawnienia(Uprawnienia instance);
    #endregion
		
		public bazaDCDataContext() : 
				base(global::Warehouse_Management_System.Properties.Settings.Default.DatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bazaDCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DaneFirmy> DaneFirmies
		{
			get
			{
				return this.GetTable<DaneFirmy>();
			}
		}
		
		public System.Data.Linq.Table<Uzytkownicy> Uzytkownicies
		{
			get
			{
				return this.GetTable<Uzytkownicy>();
			}
		}
		
		public System.Data.Linq.Table<Faktury> Fakturies
		{
			get
			{
				return this.GetTable<Faktury>();
			}
		}
		
		public System.Data.Linq.Table<Klienci> Kliencis
		{
			get
			{
				return this.GetTable<Klienci>();
			}
		}
		
		public System.Data.Linq.Table<Produkty> Produkties
		{
			get
			{
				return this.GetTable<Produkty>();
			}
		}
		
		public System.Data.Linq.Table<Produkty_sprzedane> Produkty_sprzedanes
		{
			get
			{
				return this.GetTable<Produkty_sprzedane>();
			}
		}
		
		public System.Data.Linq.Table<Uprawnienia> Uprawnienias
		{
			get
			{
				return this.GetTable<Uprawnienia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DaneFirmy")]
	public partial class DaneFirmy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_firmy;
		
		private string _Nazwa;
		
		private string _Ulica;
		
		private string _Nr_budynku;
		
		private string _Nr_mieszkania;
		
		private string _Miasto;
		
		private string _Kod_pocztowy;
		
		private string _Nip;
		
		private string _Telefon;
		
		private EntitySet<Faktury> _Fakturies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_firmyChanging(int value);
    partial void OnId_firmyChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNr_budynkuChanging(string value);
    partial void OnNr_budynkuChanged();
    partial void OnNr_mieszkaniaChanging(string value);
    partial void OnNr_mieszkaniaChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnKod_pocztowyChanging(string value);
    partial void OnKod_pocztowyChanged();
    partial void OnNipChanging(string value);
    partial void OnNipChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    #endregion
		
		public DaneFirmy()
		{
			this._Fakturies = new EntitySet<Faktury>(new Action<Faktury>(this.attach_Fakturies), new Action<Faktury>(this.detach_Fakturies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_firmy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_firmy
		{
			get
			{
				return this._Id_firmy;
			}
			set
			{
				if ((this._Id_firmy != value))
				{
					this.OnId_firmyChanging(value);
					this.SendPropertyChanging();
					this._Id_firmy = value;
					this.SendPropertyChanged("Id_firmy");
					this.OnId_firmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(50)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_budynku", DbType="NVarChar(10)")]
		public string Nr_budynku
		{
			get
			{
				return this._Nr_budynku;
			}
			set
			{
				if ((this._Nr_budynku != value))
				{
					this.OnNr_budynkuChanging(value);
					this.SendPropertyChanging();
					this._Nr_budynku = value;
					this.SendPropertyChanged("Nr_budynku");
					this.OnNr_budynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_mieszkania", DbType="NVarChar(10)")]
		public string Nr_mieszkania
		{
			get
			{
				return this._Nr_mieszkania;
			}
			set
			{
				if ((this._Nr_mieszkania != value))
				{
					this.OnNr_mieszkaniaChanging(value);
					this.SendPropertyChanging();
					this._Nr_mieszkania = value;
					this.SendPropertyChanged("Nr_mieszkania");
					this.OnNr_mieszkaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod_pocztowy", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string Kod_pocztowy
		{
			get
			{
				return this._Kod_pocztowy;
			}
			set
			{
				if ((this._Kod_pocztowy != value))
				{
					this.OnKod_pocztowyChanging(value);
					this.SendPropertyChanging();
					this._Kod_pocztowy = value;
					this.SendPropertyChanged("Kod_pocztowy");
					this.OnKod_pocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="VarChar(20)")]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this.OnNipChanging(value);
					this.SendPropertyChanging();
					this._Nip = value;
					this.SendPropertyChanged("Nip");
					this.OnNipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(50)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaneFirmy_Faktury", Storage="_Fakturies", ThisKey="Id_firmy", OtherKey="Id_firmy")]
		public EntitySet<Faktury> Fakturies
		{
			get
			{
				return this._Fakturies;
			}
			set
			{
				this._Fakturies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.DaneFirmy = this;
		}
		
		private void detach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.DaneFirmy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownicy")]
	public partial class Uzytkownicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_uzytkownika;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private string _Login;
		
		private string _Haslo;
		
		private int _Id_uprawnienia;
		
		private EntitySet<Faktury> _Fakturies;
		
		private EntityRef<Uprawnienia> _Uprawnienia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_uzytkownikaChanging(int value);
    partial void OnId_uzytkownikaChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnId_uprawnieniaChanging(int value);
    partial void OnId_uprawnieniaChanged();
    #endregion
		
		public Uzytkownicy()
		{
			this._Fakturies = new EntitySet<Faktury>(new Action<Faktury>(this.attach_Fakturies), new Action<Faktury>(this.detach_Fakturies));
			this._Uprawnienia = default(EntityRef<Uprawnienia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_uzytkownika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_uzytkownika
		{
			get
			{
				return this._Id_uzytkownika;
			}
			set
			{
				if ((this._Id_uzytkownika != value))
				{
					this.OnId_uzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._Id_uzytkownika = value;
					this.SendPropertyChanged("Id_uzytkownika");
					this.OnId_uzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haslo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_uprawnienia", DbType="Int NOT NULL")]
		public int Id_uprawnienia
		{
			get
			{
				return this._Id_uprawnienia;
			}
			set
			{
				if ((this._Id_uprawnienia != value))
				{
					if (this._Uprawnienia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_uprawnieniaChanging(value);
					this.SendPropertyChanging();
					this._Id_uprawnienia = value;
					this.SendPropertyChanged("Id_uprawnienia");
					this.OnId_uprawnieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownicy_Faktury", Storage="_Fakturies", ThisKey="Id_uzytkownika", OtherKey="Id_uzytkownika")]
		public EntitySet<Faktury> Fakturies
		{
			get
			{
				return this._Fakturies;
			}
			set
			{
				this._Fakturies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uprawnienia_Uzytkownicy", Storage="_Uprawnienia", ThisKey="Id_uprawnienia", OtherKey="Id_uprawnienia", IsForeignKey=true)]
		public Uprawnienia Uprawnienia
		{
			get
			{
				return this._Uprawnienia.Entity;
			}
			set
			{
				Uprawnienia previousValue = this._Uprawnienia.Entity;
				if (((previousValue != value) 
							|| (this._Uprawnienia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uprawnienia.Entity = null;
						previousValue.Uzytkownicies.Remove(this);
					}
					this._Uprawnienia.Entity = value;
					if ((value != null))
					{
						value.Uzytkownicies.Add(this);
						this._Id_uprawnienia = value.Id_uprawnienia;
					}
					else
					{
						this._Id_uprawnienia = default(int);
					}
					this.SendPropertyChanged("Uprawnienia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownicy = this;
		}
		
		private void detach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownicy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faktury")]
	public partial class Faktury : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_faktury;
		
		private int _Id_klienta;
		
		private int _Id_firmy;
		
		private int _Id_uzytkownika;
		
		private string _Nr_faktury;
		
		private System.DateTime _Data_wystawienia;
		
		private System.DateTime _Data_sprzedazy;
		
		private System.DateTime _Termin_zaplaty;
		
		private EntitySet<Produkty_sprzedane> _Produkty_sprzedanes;
		
		private EntityRef<DaneFirmy> _DaneFirmy;
		
		private EntityRef<Uzytkownicy> _Uzytkownicy;
		
		private EntityRef<Klienci> _Klienci;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_fakturyChanging(int value);
    partial void OnId_fakturyChanged();
    partial void OnId_klientaChanging(int value);
    partial void OnId_klientaChanged();
    partial void OnId_firmyChanging(int value);
    partial void OnId_firmyChanged();
    partial void OnId_uzytkownikaChanging(int value);
    partial void OnId_uzytkownikaChanged();
    partial void OnNr_fakturyChanging(string value);
    partial void OnNr_fakturyChanged();
    partial void OnData_wystawieniaChanging(System.DateTime value);
    partial void OnData_wystawieniaChanged();
    partial void OnData_sprzedazyChanging(System.DateTime value);
    partial void OnData_sprzedazyChanged();
    partial void OnTermin_zaplatyChanging(System.DateTime value);
    partial void OnTermin_zaplatyChanged();
    #endregion
		
		public Faktury()
		{
			this._Produkty_sprzedanes = new EntitySet<Produkty_sprzedane>(new Action<Produkty_sprzedane>(this.attach_Produkty_sprzedanes), new Action<Produkty_sprzedane>(this.detach_Produkty_sprzedanes));
			this._DaneFirmy = default(EntityRef<DaneFirmy>);
			this._Uzytkownicy = default(EntityRef<Uzytkownicy>);
			this._Klienci = default(EntityRef<Klienci>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_faktury", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_faktury
		{
			get
			{
				return this._Id_faktury;
			}
			set
			{
				if ((this._Id_faktury != value))
				{
					this.OnId_fakturyChanging(value);
					this.SendPropertyChanging();
					this._Id_faktury = value;
					this.SendPropertyChanged("Id_faktury");
					this.OnId_fakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_klienta", DbType="Int NOT NULL")]
		public int Id_klienta
		{
			get
			{
				return this._Id_klienta;
			}
			set
			{
				if ((this._Id_klienta != value))
				{
					if (this._Klienci.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_klientaChanging(value);
					this.SendPropertyChanging();
					this._Id_klienta = value;
					this.SendPropertyChanged("Id_klienta");
					this.OnId_klientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_firmy", DbType="Int NOT NULL")]
		public int Id_firmy
		{
			get
			{
				return this._Id_firmy;
			}
			set
			{
				if ((this._Id_firmy != value))
				{
					if (this._DaneFirmy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_firmyChanging(value);
					this.SendPropertyChanging();
					this._Id_firmy = value;
					this.SendPropertyChanged("Id_firmy");
					this.OnId_firmyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_uzytkownika", DbType="Int NOT NULL")]
		public int Id_uzytkownika
		{
			get
			{
				return this._Id_uzytkownika;
			}
			set
			{
				if ((this._Id_uzytkownika != value))
				{
					if (this._Uzytkownicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_uzytkownikaChanging(value);
					this.SendPropertyChanging();
					this._Id_uzytkownika = value;
					this.SendPropertyChanged("Id_uzytkownika");
					this.OnId_uzytkownikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_faktury", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nr_faktury
		{
			get
			{
				return this._Nr_faktury;
			}
			set
			{
				if ((this._Nr_faktury != value))
				{
					this.OnNr_fakturyChanging(value);
					this.SendPropertyChanging();
					this._Nr_faktury = value;
					this.SendPropertyChanged("Nr_faktury");
					this.OnNr_fakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_wystawienia", DbType="Date NOT NULL")]
		public System.DateTime Data_wystawienia
		{
			get
			{
				return this._Data_wystawienia;
			}
			set
			{
				if ((this._Data_wystawienia != value))
				{
					this.OnData_wystawieniaChanging(value);
					this.SendPropertyChanging();
					this._Data_wystawienia = value;
					this.SendPropertyChanged("Data_wystawienia");
					this.OnData_wystawieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_sprzedazy", DbType="Date NOT NULL")]
		public System.DateTime Data_sprzedazy
		{
			get
			{
				return this._Data_sprzedazy;
			}
			set
			{
				if ((this._Data_sprzedazy != value))
				{
					this.OnData_sprzedazyChanging(value);
					this.SendPropertyChanging();
					this._Data_sprzedazy = value;
					this.SendPropertyChanged("Data_sprzedazy");
					this.OnData_sprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Termin_zaplaty", DbType="Date NOT NULL")]
		public System.DateTime Termin_zaplaty
		{
			get
			{
				return this._Termin_zaplaty;
			}
			set
			{
				if ((this._Termin_zaplaty != value))
				{
					this.OnTermin_zaplatyChanging(value);
					this.SendPropertyChanging();
					this._Termin_zaplaty = value;
					this.SendPropertyChanged("Termin_zaplaty");
					this.OnTermin_zaplatyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faktury_Produkty_sprzedane", Storage="_Produkty_sprzedanes", ThisKey="Id_faktury", OtherKey="Id_faktury")]
		public EntitySet<Produkty_sprzedane> Produkty_sprzedanes
		{
			get
			{
				return this._Produkty_sprzedanes;
			}
			set
			{
				this._Produkty_sprzedanes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaneFirmy_Faktury", Storage="_DaneFirmy", ThisKey="Id_firmy", OtherKey="Id_firmy", IsForeignKey=true)]
		public DaneFirmy DaneFirmy
		{
			get
			{
				return this._DaneFirmy.Entity;
			}
			set
			{
				DaneFirmy previousValue = this._DaneFirmy.Entity;
				if (((previousValue != value) 
							|| (this._DaneFirmy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DaneFirmy.Entity = null;
						previousValue.Fakturies.Remove(this);
					}
					this._DaneFirmy.Entity = value;
					if ((value != null))
					{
						value.Fakturies.Add(this);
						this._Id_firmy = value.Id_firmy;
					}
					else
					{
						this._Id_firmy = default(int);
					}
					this.SendPropertyChanged("DaneFirmy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownicy_Faktury", Storage="_Uzytkownicy", ThisKey="Id_uzytkownika", OtherKey="Id_uzytkownika", IsForeignKey=true)]
		public Uzytkownicy Uzytkownicy
		{
			get
			{
				return this._Uzytkownicy.Entity;
			}
			set
			{
				Uzytkownicy previousValue = this._Uzytkownicy.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownicy.Entity = null;
						previousValue.Fakturies.Remove(this);
					}
					this._Uzytkownicy.Entity = value;
					if ((value != null))
					{
						value.Fakturies.Add(this);
						this._Id_uzytkownika = value.Id_uzytkownika;
					}
					else
					{
						this._Id_uzytkownika = default(int);
					}
					this.SendPropertyChanged("Uzytkownicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Faktury", Storage="_Klienci", ThisKey="Id_klienta", OtherKey="Id_klienta", IsForeignKey=true)]
		public Klienci Klienci
		{
			get
			{
				return this._Klienci.Entity;
			}
			set
			{
				Klienci previousValue = this._Klienci.Entity;
				if (((previousValue != value) 
							|| (this._Klienci.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klienci.Entity = null;
						previousValue.Fakturies.Remove(this);
					}
					this._Klienci.Entity = value;
					if ((value != null))
					{
						value.Fakturies.Add(this);
						this._Id_klienta = value.Id_klienta;
					}
					else
					{
						this._Id_klienta = default(int);
					}
					this.SendPropertyChanged("Klienci");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produkty_sprzedanes(Produkty_sprzedane entity)
		{
			this.SendPropertyChanging();
			entity.Faktury = this;
		}
		
		private void detach_Produkty_sprzedanes(Produkty_sprzedane entity)
		{
			this.SendPropertyChanging();
			entity.Faktury = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klienci")]
	public partial class Klienci : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_klienta;
		
		private string _Nazwa;
		
		private string _Ulica;
		
		private string _Nr_budynku;
		
		private string _Nr_mieszkania;
		
		private string _Miasto;
		
		private string _Kod_pocztowy;
		
		private string _Nip;
		
		private string _Telefon;
		
		private EntitySet<Faktury> _Fakturies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_klientaChanging(int value);
    partial void OnId_klientaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNr_budynkuChanging(string value);
    partial void OnNr_budynkuChanged();
    partial void OnNr_mieszkaniaChanging(string value);
    partial void OnNr_mieszkaniaChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnKod_pocztowyChanging(string value);
    partial void OnKod_pocztowyChanged();
    partial void OnNipChanging(string value);
    partial void OnNipChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    #endregion
		
		public Klienci()
		{
			this._Fakturies = new EntitySet<Faktury>(new Action<Faktury>(this.attach_Fakturies), new Action<Faktury>(this.detach_Fakturies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_klienta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_klienta
		{
			get
			{
				return this._Id_klienta;
			}
			set
			{
				if ((this._Id_klienta != value))
				{
					this.OnId_klientaChanging(value);
					this.SendPropertyChanging();
					this._Id_klienta = value;
					this.SendPropertyChanged("Id_klienta");
					this.OnId_klientaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulica", DbType="NVarChar(50)")]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_budynku", DbType="NVarChar(10)")]
		public string Nr_budynku
		{
			get
			{
				return this._Nr_budynku;
			}
			set
			{
				if ((this._Nr_budynku != value))
				{
					this.OnNr_budynkuChanging(value);
					this.SendPropertyChanging();
					this._Nr_budynku = value;
					this.SendPropertyChanged("Nr_budynku");
					this.OnNr_budynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr_mieszkania", DbType="NVarChar(10)")]
		public string Nr_mieszkania
		{
			get
			{
				return this._Nr_mieszkania;
			}
			set
			{
				if ((this._Nr_mieszkania != value))
				{
					this.OnNr_mieszkaniaChanging(value);
					this.SendPropertyChanging();
					this._Nr_mieszkania = value;
					this.SendPropertyChanged("Nr_mieszkania");
					this.OnNr_mieszkaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod_pocztowy", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string Kod_pocztowy
		{
			get
			{
				return this._Kod_pocztowy;
			}
			set
			{
				if ((this._Kod_pocztowy != value))
				{
					this.OnKod_pocztowyChanging(value);
					this.SendPropertyChanging();
					this._Kod_pocztowy = value;
					this.SendPropertyChanged("Kod_pocztowy");
					this.OnKod_pocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nip", DbType="VarChar(20)")]
		public string Nip
		{
			get
			{
				return this._Nip;
			}
			set
			{
				if ((this._Nip != value))
				{
					this.OnNipChanging(value);
					this.SendPropertyChanging();
					this._Nip = value;
					this.SendPropertyChanged("Nip");
					this.OnNipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(50)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klienci_Faktury", Storage="_Fakturies", ThisKey="Id_klienta", OtherKey="Id_klienta")]
		public EntitySet<Faktury> Fakturies
		{
			get
			{
				return this._Fakturies;
			}
			set
			{
				this._Fakturies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = this;
		}
		
		private void detach_Fakturies(Faktury entity)
		{
			this.SendPropertyChanging();
			entity.Klienci = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produkty")]
	public partial class Produkty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_produktu;
		
		private string _Nazwa;
		
		private decimal _Cena_netto;
		
		private int _Ilosc;
		
		private string _Kod_produktu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_produktuChanging(int value);
    partial void OnId_produktuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnCena_nettoChanging(decimal value);
    partial void OnCena_nettoChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnKod_produktuChanging(string value);
    partial void OnKod_produktuChanged();
    #endregion
		
		public Produkty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_produktu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_produktu
		{
			get
			{
				return this._Id_produktu;
			}
			set
			{
				if ((this._Id_produktu != value))
				{
					this.OnId_produktuChanging(value);
					this.SendPropertyChanging();
					this._Id_produktu = value;
					this.SendPropertyChanged("Id_produktu");
					this.OnId_produktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena_netto", DbType="Decimal(10,2) NOT NULL")]
		public decimal Cena_netto
		{
			get
			{
				return this._Cena_netto;
			}
			set
			{
				if ((this._Cena_netto != value))
				{
					this.OnCena_nettoChanging(value);
					this.SendPropertyChanging();
					this._Cena_netto = value;
					this.SendPropertyChanged("Cena_netto");
					this.OnCena_nettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod_produktu", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Kod_produktu
		{
			get
			{
				return this._Kod_produktu;
			}
			set
			{
				if ((this._Kod_produktu != value))
				{
					this.OnKod_produktuChanging(value);
					this.SendPropertyChanging();
					this._Kod_produktu = value;
					this.SendPropertyChanged("Kod_produktu");
					this.OnKod_produktuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produkty_sprzedane")]
	public partial class Produkty_sprzedane : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_produktu_sprzedanego;
		
		private int _Id_faktury;
		
		private string _Nazwa_produktu;
		
		private decimal _Cena_jednostkowa_netto;
		
		private int _vat;
		
		private int _Ilosc;
		
		private EntityRef<Faktury> _Faktury;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_produktu_sprzedanegoChanging(int value);
    partial void OnId_produktu_sprzedanegoChanged();
    partial void OnId_fakturyChanging(int value);
    partial void OnId_fakturyChanged();
    partial void OnNazwa_produktuChanging(string value);
    partial void OnNazwa_produktuChanged();
    partial void OnCena_jednostkowa_nettoChanging(decimal value);
    partial void OnCena_jednostkowa_nettoChanged();
    partial void OnvatChanging(int value);
    partial void OnvatChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Produkty_sprzedane()
		{
			this._Faktury = default(EntityRef<Faktury>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_produktu_sprzedanego", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_produktu_sprzedanego
		{
			get
			{
				return this._Id_produktu_sprzedanego;
			}
			set
			{
				if ((this._Id_produktu_sprzedanego != value))
				{
					this.OnId_produktu_sprzedanegoChanging(value);
					this.SendPropertyChanging();
					this._Id_produktu_sprzedanego = value;
					this.SendPropertyChanged("Id_produktu_sprzedanego");
					this.OnId_produktu_sprzedanegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_faktury", DbType="Int NOT NULL")]
		public int Id_faktury
		{
			get
			{
				return this._Id_faktury;
			}
			set
			{
				if ((this._Id_faktury != value))
				{
					if (this._Faktury.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_fakturyChanging(value);
					this.SendPropertyChanging();
					this._Id_faktury = value;
					this.SendPropertyChanged("Id_faktury");
					this.OnId_fakturyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_produktu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa_produktu
		{
			get
			{
				return this._Nazwa_produktu;
			}
			set
			{
				if ((this._Nazwa_produktu != value))
				{
					this.OnNazwa_produktuChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_produktu = value;
					this.SendPropertyChanged("Nazwa_produktu");
					this.OnNazwa_produktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cena_jednostkowa_netto", DbType="Decimal(10,2) NOT NULL")]
		public decimal Cena_jednostkowa_netto
		{
			get
			{
				return this._Cena_jednostkowa_netto;
			}
			set
			{
				if ((this._Cena_jednostkowa_netto != value))
				{
					this.OnCena_jednostkowa_nettoChanging(value);
					this.SendPropertyChanging();
					this._Cena_jednostkowa_netto = value;
					this.SendPropertyChanged("Cena_jednostkowa_netto");
					this.OnCena_jednostkowa_nettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vat", DbType="Int NOT NULL")]
		public int vat
		{
			get
			{
				return this._vat;
			}
			set
			{
				if ((this._vat != value))
				{
					this.OnvatChanging(value);
					this.SendPropertyChanging();
					this._vat = value;
					this.SendPropertyChanged("vat");
					this.OnvatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faktury_Produkty_sprzedane", Storage="_Faktury", ThisKey="Id_faktury", OtherKey="Id_faktury", IsForeignKey=true)]
		public Faktury Faktury
		{
			get
			{
				return this._Faktury.Entity;
			}
			set
			{
				Faktury previousValue = this._Faktury.Entity;
				if (((previousValue != value) 
							|| (this._Faktury.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faktury.Entity = null;
						previousValue.Produkty_sprzedanes.Remove(this);
					}
					this._Faktury.Entity = value;
					if ((value != null))
					{
						value.Produkty_sprzedanes.Add(this);
						this._Id_faktury = value.Id_faktury;
					}
					else
					{
						this._Id_faktury = default(int);
					}
					this.SendPropertyChanged("Faktury");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uprawnienia")]
	public partial class Uprawnienia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_uprawnienia;
		
		private string _Nazwa;
		
		private EntitySet<Uzytkownicy> _Uzytkownicies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_uprawnieniaChanging(int value);
    partial void OnId_uprawnieniaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Uprawnienia()
		{
			this._Uzytkownicies = new EntitySet<Uzytkownicy>(new Action<Uzytkownicy>(this.attach_Uzytkownicies), new Action<Uzytkownicy>(this.detach_Uzytkownicies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_uprawnienia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_uprawnienia
		{
			get
			{
				return this._Id_uprawnienia;
			}
			set
			{
				if ((this._Id_uprawnienia != value))
				{
					this.OnId_uprawnieniaChanging(value);
					this.SendPropertyChanging();
					this._Id_uprawnienia = value;
					this.SendPropertyChanged("Id_uprawnienia");
					this.OnId_uprawnieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uprawnienia_Uzytkownicy", Storage="_Uzytkownicies", ThisKey="Id_uprawnienia", OtherKey="Id_uprawnienia")]
		public EntitySet<Uzytkownicy> Uzytkownicies
		{
			get
			{
				return this._Uzytkownicies;
			}
			set
			{
				this._Uzytkownicies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uzytkownicies(Uzytkownicy entity)
		{
			this.SendPropertyChanging();
			entity.Uprawnienia = this;
		}
		
		private void detach_Uzytkownicies(Uzytkownicy entity)
		{
			this.SendPropertyChanging();
			entity.Uprawnienia = null;
		}
	}
}
#pragma warning restore 1591
